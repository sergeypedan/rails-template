.devise-section

  .card
    .card-header
      h1.card-title = t("authentication.registration")

    .card-body
      / = link_to fa_icon('facebook', text: "Войти с помощью Facebook"), user_facebook_omniauth_authorize_path, class: 'btn btn-primary'
      / p.or или

      = form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f|

        = f.hidden_field :first_name
        = f.hidden_field :last_name

        / .form-group
        /   = f.label :first_name, nil, class: "control-label required"
        /   .input-group
        /     .input-group-prepend = fa_icon "fw user"
        /     = f.text_field :first_name, required: true, placeholder: t("authentication.placeholders.first_name"), autofocus: true, autocomplete: "fname", class: "form-control"

        / .form-group
        /   = f.label :last_name, nil, class: "control-label required"
        /   .input-group
        /     .input-group-prepend = fa_icon "fw user"
        /     = f.text_field :last_name, required: true, placeholder: t("authentication.placeholders.last_name"), autocomplete: "lname", class: "form-control"

        .form-group.form-group-lg
          = f.label :email, nil, class: 'control-label required'
          .input-group
            .input-group-prepend
              .input-group-text = fa_icon "fw at"
            = f.email_field :email, autofocus: false, placeholder: t("authentication.placeholders.email"), autocomplete: "email", required: true, class: 'form-control'
          small.form-text.text-muted Мы пришлём вам письмо с просьбой подтвердить этот адрес


        .form-group.form-group-lg
          = f.label :password, t("authentication.new_password"), class: 'control-label required'
          .input-group
            .input-group-prepend
              .input-group-text = fa_icon "fw key"
            = f.password_field :password, autocomplete: "new-password", minlength: @minimum_password_length, placeholder: t("authentication.placeholders.password"), required: true, class: 'form-control'
          - if @minimum_password_length
            small.form-text.text-muted
              | Длина от #{PasswordValidator::LENGTH.min} до #{PasswordValidator::LENGTH.max} символов; должен включать как миниммум 1 заглавную и 1 строчную букву, 1 цифру и 1 спецсимвол (тильду, апостроф и т. п.) Рекомендуем использовать
              =<> link_to "менеджер паролей", "https://habr.com/post/357192/", target: "_blank"
              | для генерации и хранения надёжных паролей.

        = devise_error_messages!

        = f.submit t("authentication.sign_up"), class: 'btn btn-success btn-lg btn-block'

    .card-footer.extra-actions
      = t("authentication.already")
      =< link_to t("authentication.sign_in"), new_session_path(resource_name) if controller_name != 'sessions'
